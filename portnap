#!/bin/sh

PORTDIR="/usr/ports"
FREEBSD_GIT="https://git.FreeBSD.org/ports.git"

#----------------------------------
PORTDIR_MSG="Ports directory: $PORTDIR"

YEAR=$(date +'%Y')

portDirEmpty() {
    if [ -n "$(find "$PORTDIR" -d 0 -type d -empty)" ]
        then return 0; else return 1; fi
}

portDirExist() {
    if [ ! -d "$PORTDIR" ]; then
        echo "$PORTDIR_MSG - doesn't exist."
        exit 1
    fi
}

parseFullFormat() {
    if echo "$1" | grep -Eq '^[0-9]{4}Q[1-4]$'
        then return 0; else return 1; fi
}

parseSimpleFormat() {
    if echo "$1" | grep -Eq '^Q[1-4]$'
        then return 0; else return 1; fi
}

parsePath() {
    if echo "$1" | grep -Eq '^(/[^/ ]*)+/?$'
        then return 0; else return 1; fi
}

overwritePortdir() {
    if parsePath "$1"; then
        PORTDIR="$1"
        PORTDIR_MSG="Ports directory: $PORTDIR"
    else
        echo "Invalid path: $1"
        exit 1
    fi
}

isFlag() {
    if echo "$1" | grep -Eq '^-[a-zA-Z]+$'
        then return 0; else return 1; fi
}

auto() {
    portDirExist
    echo "$PORTDIR_MSG - exist."
        if portDirEmpty; then

            echo "$PORTDIR_MSG - empty."
            echo "Cloning Ports tree."
            git clone "$FREEBSD_GIT" "$PORTDIR"
        else

            echo "$PORTDIR_MSG - not empty."
            git branch "$PORTDIR"
            echo "Updating Ports tree."
            git -C "$PORTDIR" pull
        fi
}

validFormatMsg() {
    echo "Examples of valid branch format are ${YEAR}Q4 or just Q1,Q2,Q3,Q4."
}

fetch() {
    portDirExist
    if parseSimpleFormat "$1"; then
        if portDirEmpty; then
            echo "$PORTDIR_MSG - empty."
            echo "Fetching Ports tree $YEAR$1"
            git clone "$FREEBSD_GIT" -b "$YEAR$1" "$PORTDIR"
        else
            echo "$PORTDIR_MSG - not empty."
            git -C "$PORTDIR" branch
            echo "Updating Ports tree."
            git -C "$PORTDIR" pull origin "$YEAR$1"
        fi

    elif parseFullFormat "$1"; then
        if portDirEmpty; then
            echo "$PORTDIR_MSG - empty."
            echo "Fetching Ports tree $1"
            git clone "$FREEBSD_GIT" -b "$1" "$PORTDIR"
        else
            echo "$PORTDIR_MSG - not empty."
            git -C "$PORTDIR" branch
            echo "Updating Ports tree."
            git -C "$PORTDIR" pull origin "$1"
        fi

    else
        validFormatMsg
        exit 1
    fi
}

checkForGit() {
    if [ ! -e /usr/local/bin/git ]; then
        echo "Please install Git first."
        exit 1
    fi
}

switch() {
    if parseSimpleFormat "$1"; then
        echo "Switching to $YEAR$1"
        git -C "$PORTDIR" switch "$YEAR$1"
            
    elif parseFullFormat "$1"; then
        echo "Switching to $1"
        git -C "$PORTDIR" switch "$1"
    else
         validFormatMsg
         exit 1
    fi
}

help() {
    echo ""
    echo "Usage: portnap [path] <command> [branch]"
    echo " "
    echo "Options:"
    echo "  -p portsdir  -- Location of ports tree (default: /usr/ports)"
    echo " "
    echo "Commands:"
    echo "  auto     -- Fetch updates, and either clone a new ports tree or update an existing tree."
    echo "  fetch    -- Same as auto but also allows you to select a specific branch. Where the branch is in <yyyyQx> or <Qx> format."
    echo "  switch   -- Change ports tree branch, where the branch is in <yyyyQx> or <Qx> format."
    echo "  help     -- Print this help information."
    echo " "
    echo "Examples:"
    echo "  portnap fetch Q3  -- Clone or pull ports tree from third quarter of current year."
    echo "  portnap -p /usr/local/poudriere/acme/usr/ports auto -- Clone or pull ports tree to alternative directory."
    exit 0
}

#----------------------------------

checkForGit

if [ "$#" -eq 0 ]; then
    help
fi

while [ "$#" -gt 0 ]; do
  case "$1" in
    "auto")
        COMMAND="A"
        shift 1
      ;;
#----------------------------------
    "fetch")
      if [ "$#" -gt 1 ]; then
        if ! isFlag "$2"; then
          COMMAND="F"
          QUARTAL="$2"
          shift 2
        else
          COMMAND="F"
          shift 1
        fi
      else
        COMMAND="F"
        shift 1
      fi
      ;;
#----------------------------------
    "switch")
      if [ "$#" -gt 1 ]; then
        COMMAND="S"
        QUARTAL="$2"
        shift 2
      else
        echo "Please provide branch name for $1."
        validFormatMsg
        exit 1
      fi
      ;;
#----------------------------------
    "-p")
      if [ "$#" -gt 1 ]; then
        overwritePortdir "$2"
        shift 2
      else
        echo "No path provided for $1 flag."
        exit 1
      fi
      ;;
#----------------------------------
    "help")
      help
      ;;
    *)
#----------------------------------
      help
      ;;
  esac
done

#----------------------------------

case "$COMMAND" in
    
    "A")
        auto
        ;;
    "F")
        if [ -n "$QUARTAL" ]; then
            fetch "$QUARTAL"
        else
            auto
        fi
        ;;
    "S")
        if [ -n "$QUARTAL" ]; then
            switch "$QUARTAL"
        fi
        ;;
    *)
        exit 1
        ;;

esac
